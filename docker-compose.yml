version: "3"

networks:
  loki:
    driver: bridge
    ipam:
     config:
       - subnet: 10.12.34.0/24
         gateway: 10.12.34.1
volumes:
  log-data:
    driver: local
  cache-data:
    driver: local

services:
#  flog-log:
#  image: mingrammer/flog
#  command: "-f json -t log -l -w -d 5s -o /etc/data/data.log"
#  volumes:
#    - app/logs:/logs
  bootstrap:
    image:  ghcr.io/incredinews/rotator:squashed
    volumes:
      - log-data:/repo/app/logs
    command: /bin/bash -c "cd /repo/app/logs/;while (true);do touch main.log curl.log fetch.log pages.log files.log;sleep 120;done"
  finish:
    image:  ghcr.io/incredinews/rotator:squashed
    depends_on:
      - action
    volumes:
      - cache-data:/extcache/
      - /var/run/docker.sock:/var/run/docker.sock
    #command: /bin/bash -c 'docker ps -a >&2 ;sleep 30; while (docker ps -a |grep action|grep -q -e reated -e unning  -e Up);do docker ps -a |grep action>&2;echo "still running" &>2;sleep 30;done;cd /extcache/cache && cd /extcache && tar cvz cache/'
    command: /bin/bash -c 'docker ps -a >&2 ;sleep 30; while (docker ps -a |grep action|grep -q -e reated -e unning  -e Up);do docker ps -a |grep action>&2;echo "still running" &>2;sleep 30;done;echo waiting for cache-fetcher ;sleep 120'
  action:
    #image:  ghcr.io/incredinews/rotator:squashed
    depends_on:
      - loki
    networks:
      loki:
        ipv4_address: 10.12.34.11
    logging:
      driver: "fluentd"
      options:
        fluentd-address: 10.12.34.55:24224
    build:
      context: .
      dockerfile: Dockerfile.action
#    volumes:
#      - /repo/app/logs:/logs
    volumes:
      - log-data:/repo/app/logs
      - cache-data:/extcache
#    command: /bin/bash -c " cd /repo && bash action.sh"
    command: /bin/bash -c "sleep 120"
    environment:
        GIT_USER: ${GIT_USER}
        GIST_ID: ${GIST_ID}
        GIST_TOKEN: ${GIST_TOKEN}
        CF_PAGESPROJECT: ${CF_PAGESPROJECT}
        CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN}

#docker run -it -p 1993:1993 -v $PWD:/app denoland/deno:2.1.7 run --allow-env --allow-net --allow-read --unstable-cron /app/main.ts        
  loki:
    depends_on:
      - bootstrap
    #image:  grafana/fluent-bit-plugin-loki:main
    build:
      context: .
      dockerfile: Dockerfile.loki
#CMD ["/fluent-bit/bin/fluent-bit", "-e","/fluent-bit/bin/out_grafana_loki.so", "-c", "/fluent-bit/etc/fluent-bit.conf"]
    networks:
      loki:
        ipv4_address: 10.12.34.55
    volumes:
      - log-data:/logs
#    volumes:
#      - ./fluent-conf/:/fluent-etc/:ro
#      - ./fluent-conf/:/fluent-bit/etc/:ro
#      - ./app/logs:/logs
  #docker run -d -i --name NAME --mount type=bind,src="${{ runner.temp }}/scenarios",target="/data" --entrypoint /bin/bash myImage:$VERSION
  tunnel:
    depends_on:
      - loki
    networks:
      loki:
        ipv4_address: 10.12.34.56
    container_name: cloudflared-tunnel
#    image: cloudflare/cloudflared
    build:
      context: .
      dockerfile: Dockerfile.cf
    restart: unless-stopped
    command: tunnel run --config=/root/.cloudflared/config.yml
#    environment:
#      - TUNNEL_TOKEN=mytokengoeshere